[tool.poetry]
name = "JGLUE-evaluation-scripts"
version = "0.1.0"
description = ""
authors = ["nobu-g <ueda-n127@hotmail.co.jp>"]
maintainers = ["nobu-g <ueda-n127@hotmail.co.jp>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
torch = ">=2.1.1"
transformers = { version = "~4.34.1", extras = ["sentencepiece"] }
tokenizers = "^0.14.1"
lightning = "~2.1.0"
torchmetrics = "^1.1"
omegaconf = "^2.3"
hydra-core = "^1.3"
rich = "^13.3"
datasets = "^2.10"
rhoknp = "^1.4"
jaconv = "^0.3.4"
mecab-python3 = "^1.0"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.9"
types-attrs = "^19.1"
wandb = "^0.16.0"
tabulate = "^0.9.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py39"  # The minimum Python version to target
src = ["src"]
ignore = [
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments in function definition
    "PLR0915",  # Too many statements
    "E501",  # Line too long
    "RUF001",  # String contains ambiguous `ノ` (KATAKANA LETTER NO). Did you mean `/` (SOLIDUS)?
    "RUF002",  # Docstring contains ambiguous `，` (FULLWIDTH COMMA). Did you mean `,` (COMMA)?
    "COM812",  # Trailing comma missing
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  # Missing type annotation for `**kwargs`
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
    "PLR2004",  # Magic value used in comparison
]
select = ["F", "E", "W", "I", "B", "PL", "PD", "NPY", "RUF", "UP", "TID", "COM", "PT", "ARG", "PYI"]

[tool.ruff.per-file-ignores]
"tests/*" = ["ANN"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pydocstyle]
convention = "google"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311"]

[tool.mypy]
python_version = 3.9

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    # note the use of single quote below to denote "raw" strings in TOML
    'ignore::UserWarning',
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
